# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2020-09-01 16:12
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('xuehao', models.CharField(max_length=8, unique=True, verbose_name='学号')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], max_length=2, verbose_name='性别')),
                ('bithday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('classes', models.CharField(max_length=6, verbose_name='班级')),
                ('bedroom', models.CharField(blank=True, max_length=10, null=True, verbose_name='寝室号')),
                ('school_department', models.CharField(default='智能科技学院', max_length=20, verbose_name='学院')),
                ('counselor', models.CharField(blank=True, max_length=8, null=True, verbose_name='辅导员')),
                ('quality_score', models.FloatField(default=0.0, verbose_name='素质拓展分')),
                ('weights', models.FloatField(default=0.0, verbose_name='权重')),
                ('watch_time', models.IntegerField(default=0, verbose_name='观看学报次数')),
                ('school_position', models.CharField(max_length=20, verbose_name='校区')),
                ('image', models.ImageField(default='image/default.png', upload_to='image/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
